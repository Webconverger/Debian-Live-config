--- libisofs-1.3.2.orig/libisofs/make_isohybrid_mbr.c
+++ libisofs-1.3.2/libisofs/make_isohybrid_mbr.c
@@ -27,6 +27,7 @@
 #include "ecma119.h"
 #include "eltorito.h"
 #include "system_area.h"
+#include "util.h"
 
 
 /* This code stems from syslinux-3.72/utils/isohybrid, a perl script
@@ -144,10 +145,6 @@ int make_isohybrid_mbr(int bin_lba, int
     char *wpt;
     off_t imgsize, cylsize, frac, padding, c, cc;
 
-    /* For generating a weak random number */
-    struct timeval tv;
-    struct timezone tz;
-
     if (bin_lba < 0 || bin_lba >= (1 << 29))
         return (0); /* 1 TB limit of signed 32 bit addressing of 512 byte blocks */
 
@@ -201,8 +198,7 @@ int make_isohybrid_mbr(int bin_lba, int
      from. An environment variable ?
      125: Whatever, i use some 32-bit random value with no crypto strength.
      */
-    gettimeofday(&tv, &tz);
-    id = 0xffffffff & (tv.tv_sec ^ (tv.tv_usec * 2000));
+    id = 0xffffffff & iso_current_time();
 
     /*
      126: Adds 4 id bytes and 2 zero bytes.
@@ -566,9 +562,6 @@ int make_isolinux_mbr(int32_t *img_block
     uint32_t boot_lba, mbr_id;
     int head_count, sector_count, ret;
     int gpt_count = 0, gpt_idx[128], apm_count = 0, gpt_cursor;
-    /* For generating a weak random number */
-    struct timeval tv;
-    struct timezone tz;
 
     hd_img_blocks = ((off_t) *img_blocks) * (off_t) 4;
 
@@ -605,8 +598,7 @@ int make_isolinux_mbr(int32_t *img_block
        (here some 32-bit random value with no crypto strength)
     */
     if (flag & 1) {
-        gettimeofday(&tv, &tz);
-        id = 0xffffffff & (tv.tv_sec ^ (tv.tv_usec * 2000));
+        id = 0xffffffff & iso_current_time();
         lsb_to_buf(&wpt, id, 32, 0);
     }
 

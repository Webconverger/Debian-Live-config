#!/bin/bash
### BEGIN INIT INFO
# Provides:			 webconverger
# Required-Start:	 $local_fs $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:	 2 3 4 5
# Default-Stop:		 0 1 6
# Short-Description: Webconverger Live environment setup
### END INIT INFO

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="webconverger"
DESC="Webconverger live environment"
SCRIPTNAME=/etc/init.d/$NAME
WEBCHOME=/home/webc

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME
. /etc/webc/webc.conf

# Make sure we use a default closeicon
cmdline | grep -qs "closeicon=" || $WEBCHOME/iwcloseconfig.sh strip

# Ensure volume is 100%
amixer -s &>/dev/null <<END
set Master 100% unmute
set Master Front 100% unmute
END

cat >> /etc/X11/xorg.conf <<WCEND
# Webconverger.com options to disable X options to break out of X

Section "ServerFlags"
  Option  "AllowMouseOpenFail"
  Option  "HandleSpecialKeys" "Never"
  Option  "DontZoom" "true"
  Option  "DontZap" "true"
  Option  "DontVTSwitch" "true"
EndSection
WCEND

for x in $(cmdline)
do
	case $x in
		homepage=*)
		set -f -- $(/bin/busybox httpd -d ${x#homepage=})
		if test "$1"
		then
			export HOMEPAGE=$1
		else
			export HOMEPAGE="http://portal.webconverger.com/"
		fi
		x=$1
		shift
		if test -e /etc/iceweasel/profile/prefs.js
		then
			echo "user_pref(\"browser.startup.homepage\", \"$x\");" >> /etc/iceweasel/profile/prefs.js
		fi
		;;
		closeicon=*) # For controling the close icons in iceweasel
		$WEBCHOME/iwcloseconfig.sh ${x#closeicon=}
		;;
		webcchrome=*) # To configure the chrome settings
		$WEBCHOME/iwchromeconfig.sh ${x#webcchrome=}
		;;
		wpa-*)
		# http://anonscm.debian.org/viewvc/pkg-wpa/wpasupplicant/trunk/debian/README.Debian?view=markup
		wirelesscfg="${wirelesscfg}$(/bin/busybox httpd -d "${x/=/ }")\n\t"
		;;
		http_proxy=*)
		# http://developer.mozilla.org/en/docs/Mozilla_Networking_Preferences#Proxy
		export HTTP_PROXY=${x#http_proxy=}
		HOST_PORT=${HTTP_PROXY##*//}
		PROXY_HOST=${HOST_PORT%%:*}
		PROXY_PORT=${HOST_PORT##*:}

		logger PROXY SETTINGS: $HTTP_PROXY $PROXY_HOST $PROXY_PORT
		test -e /etc/iceweasel/profile/prefs.js &&
		echo "user_pref(\"network.proxy.type\", 1);"  >> /etc/iceweasel/profile/prefs.js
		echo "user_pref(\"network.proxy.http\", \"$PROXY_HOST\");" >> /etc/iceweasel/profile/prefs.js
		echo "user_pref(\"network.proxy.http_port\", $PROXY_PORT);" >> /etc/iceweasel/profile/prefs.js
		echo "user_pref(\"network.proxy.ssl\", \"$PROXY_HOST\");" >> /etc/iceweasel/profile/prefs.js
		echo "user_pref(\"network.proxy.ssl_port\", $PROXY_PORT);" >> /etc/iceweasel/profile/prefs.js
		;;
	esac
done

# Don't try setup wireless if there is no config or we have a working internet connection
if test -z "$wirelesscfg"
then
	exit 0
fi

sed -i "s,wireless config,$wirelesscfg,g" /etc/network/interfaces

for iface in wlan0 eth1 # for want of a better way of detecting wireless interfaces
do
	ping -c 1 google.com && break # If the network works, don't touch it
	/sbin/ifconfig $iface &> /dev/null || continue # if the device does not exist, skip!
	ifup $iface
done

:
